name: Build and Push Docker Image

on:
  repository_dispatch:
    types:
      - Push Image
  workflow_dispatch:
    inputs:
      tag:
        description: Docker image tag
        default: edge
        required: true

env:
  IMAGE_NAME: myrotvorets/ssu-scraper-cronjob
  EVENT: ${{ github.event.client_payload.event_name }}

jobs:
  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    outputs:
      refkind: ${{ steps.kind.outputs.kind }}
      reference: ${{ steps.normalize.outputs.reference }}
      commit: ${{ steps.normalize.outputs.commit }}
    steps:
      - name: Set commit status to PENDING
        uses: myrotvorets/set-commit-status-action@3730c0a348a2ace3c110851bed53331bc6406e9f # v2.0.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          status: pending
          context: Build Docker image
          sha: ${{ github.event.client_payload.sha }}
        if: github.event_name == 'repository_dispatch'

      - name: Normalize parameters
        id: normalize
        run: |
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            REF_SHA="${{ github.event.client_payload.sha }}"
            REF="${{ github.event.client_payload.ref }}"
          else
            REF_SHA="${{ github.sha }}"
            REF="${{ github.ref }}"
          fi
          echo TIMESTAMP="$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> "${GITHUB_ENV}"
          echo REFERENCE="${REF}" >> "${GITHUB_ENV}"
          echo COMMIT="${REF_SHA}" >> "${GITHUB_ENV}"
          echo "reference=${REF}" >> "${GITHUB_OUTPUT}"
          echo "commit=${REF_SHA}" >> "${GITHUB_OUTPUT}"

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ env.COMMIT }}

      - name: Analyze commit info
        id: kind
        uses: myrotvorets/composite-actions/refkind@master
        with:
          ref: ${{ env.REFERENCE }}

      - name: Determine Docker tags
        id: premeta
        uses: myrotvorets/composite-actions/docker-tags@master
        with:
          refkind: ${{ steps.kind.outputs.kind }}
          refname: ${{ steps.kind.outputs.name }}
          commit_hash: ${{ env.COMMIT }}
          image_name: ${{ env.IMAGE_NAME }}
          default_branch: ${{ github.event.repository.default_branch }}

      - name: Adjust Docker tags
        id: meta
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "tags=${{ github.event.inputs.tag }}" >> "${GITHUB_OUTPUT}"
            echo "version=${{ github.event.inputs.tag }}" >> "${GITHUB_OUTPUT}"
          else
            echo "tags=${{ steps.premeta.outputs.tags }}" >> "${GITHUB_OUTPUT}"
            echo "version=${{ steps.premeta.outputs.version }}" >> "${GITHUB_OUTPUT}"
          fi

      - name: Login to DockerHub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca # v3.9.0

      - name: Build Docker image
        uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991 # v6.13.0
        with:
          push: true
          pull: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          file: ./Dockerfile
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.meta.outputs.version }}
            org.opencontainers.image.created=${{ env.TIMESTAMP }}
            org.opencontainers.image.revision=${{ env.COMMIT }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}

      - name: Set final commit status
        uses: myrotvorets/set-commit-status-action@3730c0a348a2ace3c110851bed53331bc6406e9f # v2.0.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          context: Build Docker image
          sha: ${{ github.event.client_payload.sha }}
        if: always() && github.event_name == 'repository_dispatch'

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: ${{ needs.build.outputs.refkind == 'tag' }}
    steps:
      - name: Set commit status to PENDING
        uses: myrotvorets/set-commit-status-action@3730c0a348a2ace3c110851bed53331bc6406e9f # v2.0.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          status: pending
          context: Create a release
          sha: ${{ needs.build.outputs.commit }}
        if: github.event_name == 'repository_dispatch'

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ needs.build.outputs.commit }}

      - name: Create a release
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda # v2.2.1
        with:
          generate_release_notes: true
          tag_name: ${{ needs.build.outputs.reference }}
        env:
          GITHUB_TOKEN: ${{ secrets.REPOSITORY_ACCESS_TOKEN }}

      - name: Set final commit status
        uses: myrotvorets/set-commit-status-action@3730c0a348a2ace3c110851bed53331bc6406e9f # v2.0.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          context: Create a release
          sha: ${{ needs.build.outputs.commit }}
        if: always() && github.event_name == 'repository_dispatch'
