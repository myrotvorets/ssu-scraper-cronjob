name: Build and Push Docker Image

on:
  repository_dispatch:
    types:
      - Push Image
  workflow_dispatch:
    inputs:
      tag:
        description: Docker image tag
        default: edge
        required: true

env:
  IMAGE_NAME: myrotvorets/ssu-scraper-cronjob
  EVENT: ${{ github.event.client_payload.event_name }}

jobs:
  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    outputs:
      refkind: ${{ steps.kind.outputs.kind }}
      reference: ${{ steps.normalize.outputs.reference }}
      commit: ${{ steps.normalize.outputs.commit }}
    steps:
      - name: Set commit status to PENDING
        uses: myrotvorets/set-commit-status-action@74391422f441069685b0836133f6117f286debe5 # tag=1.1.5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          status: pending
          context: Build Docker image
          sha: ${{ github.event.client_payload.sha }}
        if: github.event_name == 'repository_dispatch'

      - name: Normalize parameters
        id: normalize
        run: |
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            REF_SHA="${{ github.event.client_payload.sha }}"
            REF="${{ github.event.client_payload.ref }}"
          else
            REF_SHA="${{ github.sha }}"
            REF="${{ github.ref }}"
          fi
          echo TIMESTAMP="$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> "${GITHUB_ENV}"
          echo REFERENCE="${REF}" >> "${GITHUB_ENV}"
          echo COMMIT="${REF_SHA}" >> "${GITHUB_ENV}"
          echo "::set-output name=reference::${REF}"
          echo "::set-output name=commit::${REF_SHA}"

      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2
        with:
          ref: ${{ env.COMMIT }}

      - name: Analyze commit info
        id: kind
        uses: myrotvorets/composite-actions/refkind@master
        with:
          ref: ${{ env.REFERENCE }}

      - name: Determine Docker tags
        id: premeta
        uses: myrotvorets/composite-actions/docker-tags@master
        with:
          refkind: ${{ steps.kind.outputs.kind }}
          refname: ${{ steps.kind.outputs.name }}
          commit_hash: ${{ env.COMMIT }}
          image_name: ${{ env.IMAGE_NAME }}
          default_branch: ${{ github.event.repository.default_branch }}

      - name: Adjust Docker tags
        id: meta
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "::set-output name=tags::${{ github.event.inputs.tag }}"
            echo "::set-output name=version::${{ github.event.inputs.tag }}"
          else
            echo "::set-output name=tags::${{ steps.premeta.outputs.tags }}"
            echo "::set-output name=version::${{ steps.premeta.outputs.version }}"
          fi

      - name: Login to DockerHub
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b # tag=v2.0.0
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6 # tag=v2.0.0

      - name: Cache Docker layers
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # tag=v3.0.11
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.COMMIT }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        uses: docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94 # tag=v3.1.1
        with:
          push: true
          pull: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          context: .
          file: ./Dockerfile
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.meta.outputs.version }}
            org.opencontainers.image.created=${{ env.TIMESTAMP }}
            org.opencontainers.image.revision=${{ env.COMMIT }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Set final commit status
        uses: myrotvorets/set-commit-status-action@74391422f441069685b0836133f6117f286debe5 # tag=1.1.5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          context: Build Docker image
          sha: ${{ github.event.client_payload.sha }}
        if: always() && github.event_name == 'repository_dispatch'

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: ${{ needs.build.outputs.refkind == 'tag' }}
    steps:
      - name: Set commit status to PENDING
        uses: myrotvorets/set-commit-status-action@74391422f441069685b0836133f6117f286debe5 # tag=1.1.5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          status: pending
          context: Create a release
          sha: ${{ needs.build.outputs.commit }}
        if: github.event_name == 'repository_dispatch'

      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2
        with:
          ref: ${{ needs.build.outputs.commit }}

      - name: Fetch tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Get release description
        id: release_params
        run: |
          SUBJECT="$(git for-each-ref "${{ needs.build.outputs.reference }}" --format="%(contents:subject)")"
          BODY="$(git for-each-ref "${{ needs.build.outputs.reference }}" --format="%(contents:body)")"
          echo "::set-output name=subject::${SUBJECT}"
          echo "::set-output name=body::${BODY}"

      - name: Create a release
        uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e # renovate: tag=v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.REPOSITORY_ACCESS_TOKEN }}
        with:
          tag_name: ${{ needs.build.outputs.reference }}
          release_name: ${{ steps.release_params.subject }}
          body: ${{ steps.release_params.body }}

      - name: Set final commit status
        uses: myrotvorets/set-commit-status-action@74391422f441069685b0836133f6117f286debe5 # tag=1.1.5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          context: Create a release
          sha: ${{ needs.build.outputs.commit }}
        if: always() && github.event_name == 'repository_dispatch'
