name: Build and Test

on:
  push:
    branches:
      - "**"
    tags:
      - "*"
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  prepare:
    name: Check preconditions
    runs-on: ubuntu-latest
    # Build if:
    #   * PUSH: not a branch OR commit does not have '[ci skip]'
    #   * PR: comes from a foreign repo
    #   * NOT PUSH AND NOT PR
    if: |
      (github.event_name == 'push' && (!startsWith(github.ref, 'refs/heads/') || !contains(github.event.head_commit.message, '[ci skip]'))) ||
      (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name) ||
      (github.event_name != 'push' && github.event_name != 'pull_request')
    steps:
      - run: echo

  build:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        node_version:
          - "14"
          - "16"
    steps:
      - name: Check out the source code
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2

      - name: Setup Node.js environment
        uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93 # tag=v3.4.1
        with:
          node-version: ${{ matrix.node_version }}

      - name: Update npm
        run: npm i -g npm@latest

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Run postinstall scripts
        run: npm rebuild && npm run prepare --if-present

      - name: Build
        run: npm run build

      - name: Run tests
        run: npm test

  hadolint:
    name: Run hadolint
    runs-on: ubuntu-latest
    needs: prepare
    if: ${{ !startsWith(github.ref, 'refs/heads/') || !needs.prepare.outputs.head_tag }}
    steps:
      - name: Check out the source code
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2

      - name: Run hadolint
        uses: hadolint/hadolint-action@f988afea3da57ee48710a9795b6bb677cc901183 # tag=v2.1.0
        with:
          dockerfile: Dockerfile

  docker:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: prepare
    env:
      IMAGE_NAME: myrotvorets/ssu-scraper-cronjob
    steps:
      - name: Check out the source code
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6 # tag=v2.0.0

      - name: Cache Docker layers
        uses: actions/cache@c3f1317a9e7b1ef106c153ac8c0f00fed3ddbc0d # tag=v3.0.4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        uses: docker/build-push-action@e551b19e49efd4e98792db7592c17c09b89db8d8 # tag=v3.0.0
        with:
          context: .
          load: true
          pull: true
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          tags: ${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Determine security scan parameters
        id: scanparams
        run: |
          if \
            ([ "${{ github.event_name }}" != "pull_request" ] || [ "${{ github.event.pull_request.head.repo.full_name }}" == "${{ github.event.pull_request.base.repo.full_name }}" ]) && \
            [ "${{ github.event.sender.login }}" != "dependabot[bot]" ]
          then
            echo ::set-output name=format::template
            echo ::set-output name=template::@/contrib/sarif.tpl
            echo ::set-output name=output::trivy-results.sarif
          else
            echo ::set-output name=format::table
            echo ::set-output name=template::
            echo ::set-output name=output::
          fi

      - name: Security Scan
        id: scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_NAME }}:${{ github.sha }}
          format: ${{ steps.scanparams.outputs.format }}
          template: ${{ steps.scanparams.outputs.template }}
          output: ${{ steps.scanparams.outputs.output }}
        if: |
          github.event_name == 'workflow_dispatch' ||
          github.event_name == 'push' && github.event.sender.login != 'dependabot[bot]'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@3e7e3b32d0fb8283594bb0a76cc60a00918b0969 # tag=v2.1.16
        with:
          sarif_file: trivy-results.sarif
        if: always() && (steps.scan.conclusion == 'success' || steps.scan.conclusion == 'failure') && steps.scanparams.outputs.output != ''

  trigger_cd:
    name: Trigger CD
    needs:
      - build
      - hadolint
      - docker
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags'))
    steps:
      - name: Trigger Docker build
        uses: myrotvorets/trigger-repository-dispatch-action@b0fffc6d88d16c090016b4416140d6c85c56f6d4 # renovate: tag=1.1.1
        with:
          token: ${{ secrets.REPOSITORY_ACCESS_TOKEN }}
          type: Push Image
          payload: '{ "ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "event_name": "${{ github.event_name }}" }'
