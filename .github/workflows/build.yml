name: Build

on:
  push:
    branches:
      - "**"
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version:
          - "12"
          - "14"
          - "16"
    steps:
      - name: Check out the source code
        uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node_version }}

      - name: Update npm
        run: npm i -g npm@latest

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Run postinstall scripts
        run: npm rebuild && npm run prepare --if-present

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

  hadolint:
    name: Run hadolint
    runs-on: ubuntu-latest
    steps:
      - name: Check out the source code
        uses: actions/checkout@v2

      - name: Run hadolint
        uses: hadolint/hadolint-action@v1.4.0
        with:
          dockerfile: Dockerfile

  docker:
    name: Build Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Check out the source code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.3.0

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        uses: docker/build-push-action@v2.4.0
        with:
          context: ${{ matrix.image }}
          load: true
          pull: true
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          tags: "myrotvorets/ssu-scraper-cronjob:${{ github.sha }}"

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Security Scan
        id: scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "myrotvorets/ssu-scraper-cronjob:${{ github.sha }}"
          format: template
          template: "@/contrib/sarif.tpl"
          output: trivy-results.sarif
        if: |
          github.event_name == 'workflow_dispatch' ||
          github.event_name == 'push' && !contains(github.event.head_commit.message, '[ci skip]') && github.event.sender.login != 'dependabot[bot]'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: trivy-results.sarif
        if: always() && (steps.scan.consclusion == 'success' || steps.scan.consclusion == 'failure')
