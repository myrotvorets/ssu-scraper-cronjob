name: Deployment

on:
  release:
    types:
      - released
  workflow_dispatch:
    inputs:
      tag:
        default: edge
        required: true
        description: Docker image tag

env:
  IMAGE_NAME: myrotvorets/ssu-scraper-cronjob

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Normalize inputs
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            echo REFERENCE="${{ github.event.release.tag_name }}" >> "${GITHUB_ENV}"
            echo IMAGE_VER="${{ github.event.release.tag_name }}" >> "${GITHUB_ENV}"
          else
            echo REFERENCE="${{ github.sha }}" >> "${GITHUB_ENV}"
            echo IMAGE_VER="${{ github.event.inputs.tag }}" >> "${GITHUB_ENV}"
          fi

      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          ref: ${{ env.REFERENCE }}

      - name: Prepare the files
        uses: myrotvorets/composite-actions/prepare-k8s-deployment@master
        with:
          image_version: ${{ env.IMAGE_VER }}
          secret_environment: ${{ secrets.SECRET_ENVIRONMENT }}
          path: iac

      - name: Start deployment
        uses: chrnorm/deployment-action@d42cde7132fcec920de534fffc3be83794335c00 # v2.0.5
        id: deployment
        with:
          token: "${{ github.token }}"
          environment: production

      - name: Deploy
        uses: myrotvorets/kubectl-action@49846ef8e3f63df58b7def8a792bbc7407859dd4 # tag=2.0.1
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA }}
          version: 1.21
          args: apply -k iac/

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@2afb7d27101260f4a764219439564d954d10b5b0 # tag=v2.0.1
        with:
          token: "${{ github.token }}"
          state: "success"
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@2afb7d27101260f4a764219439564d954d10b5b0 # tag=v2.0.1
        with:
          token: "${{ github.token }}"
          state: "failure"
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Cleanup
        if: always()
        run: rm -f ./iac/.env
